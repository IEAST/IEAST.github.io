<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/blog/2022/03/25/hello-world/"/>
    <url>/blog/2022/03/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>warframe linux 玩耍+本地化</title>
    <link href="/blog/2020/07/21/warframe/"/>
    <url>/blog/2020/07/21/warframe/</url>
    
    <content type="html"><![CDATA[<p>waframe 本身是不支持linux的, 我们可以通过<a href="https://lutris.net/">lutris</a>来下载并使用wine玩耍。</p><p>下载就先不说了 有需要在更新<br>本地化</p><p>因为lutris下载后的默认语言是En，然后本人英语又巨差，目前市面上也没有很好的本地化方法，故写一下咯。</p><p>Lutris下载的游戏一般会在Home目录下新建一个Games的文件夹。</p><p>于是waframe的路径就是<code>/home/Games/warframe/drive_c/Program Files/Warframe</code></p><p>我们打开 <code>updater.sh </code>文件拉到最下方</p><figure class="highlight c"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta"># run warframe internal updater</span><br><span class="hljs-string">&quot;$WINE&quot;</span> cmd /C <span class="hljs-string">&quot;$WINPATH&quot;</span> -silent -<span class="hljs-built_in">log</span>:/Preprocessing.<span class="hljs-built_in">log</span> -dx10:<span class="hljs-number">1</span> -dx11:<span class="hljs-number">1</span> -threadedworker:<span class="hljs-number">1</span> -cluster:public -language:zh -applet:/EE/Types/Framework/ContentUpdate<br>fi<br><br><br>#############################################################<br><span class="hljs-meta"># cache optimization</span><br>############################################################<span class="hljs-meta">#</span><br><span class="hljs-meta"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$do_cache&quot;</span> = true ] ; then</span><br>echo <span class="hljs-string">&quot;*********************&quot;</span><br>echo <span class="hljs-string">&quot;Optimizing Cache.&quot;</span><br>echo <span class="hljs-string">&quot;*********************&quot;</span><br><span class="hljs-string">&quot;$WINE&quot;</span> cmd /C <span class="hljs-string">&quot;$WINPATH&quot;</span>  -silent -<span class="hljs-built_in">log</span>:/Preprocessing.<span class="hljs-built_in">log</span> -dx10:<span class="hljs-number">1</span> -dx11:<span class="hljs-number">1</span> -threadedworker:<span class="hljs-number">1</span> -cluster:public -language:zh -applet:/EE/Types/Framework/CacheDefraggerAsync /Tools/CachePlan.txt<br>fi<br><br><br>#############################################################<br><span class="hljs-meta"># actually start the game</span><br>############################################################<span class="hljs-meta">#</span><br><span class="hljs-meta"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$start_game&quot;</span> = true ] ; then</span><br><br>echo <span class="hljs-string">&quot;*********************&quot;</span><br>echo <span class="hljs-string">&quot;Launching Warframe.&quot;</span><br>echo <span class="hljs-string">&quot;*********************&quot;</span><br><br><span class="hljs-string">&quot;$WINE&quot;</span> cmd /C start /b <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;$WINPATH&quot;</span> -<span class="hljs-built_in">log</span>:/Preprocessing.<span class="hljs-built_in">log</span> -dx10:<span class="hljs-number">1</span> -dx11:<span class="hljs-number">1</span> -threadedworker:<span class="hljs-number">1</span> -cluster:public -language:zh<br>fi<br></code></pre></td></tr></table></figure><p>直接把三个 <code>public -language:</code>后面的参数改成zh就好了。<br>前提是你语言有选中文编码。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>git部分常用命令</title>
    <link href="/blog/2020/07/21/first/"/>
    <url>/blog/2020/07/21/first/</url>
    
    <content type="html"><![CDATA[<h1 id="git部分常用命令"><a href="#git部分常用命令" class="headerlink" title="git部分常用命令"></a>git部分常用命令</h1><h2 id="第一次使用git仓库"><a href="#第一次使用git仓库" class="headerlink" title="第一次使用git仓库"></a>第一次使用git仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">git init(建立本地git仓库)<br>git add XXX(添加文件到本地git仓库)<br>git commit -m <span class="hljs-string">&quot;XXXX&quot;</span>(添加commit 信息)<br>git remote add origin git@github.com:name/project.git (添加github仓库)<br>$ git push -u origin master (提交代码)<br></code></pre></td></tr></table></figure><h2 id="以后提交"><a href="#以后提交" class="headerlink" title="以后提交"></a>以后提交</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git add XXX(添加文件到本地git仓库)<br>git commit -m <span class="hljs-string">&quot;XXXX&quot;</span>(添加commit 信息)<br>git push (提交代码)<br></code></pre></td></tr></table></figure><h2 id="第二仓库"><a href="#第二仓库" class="headerlink" title="第二仓库"></a>第二仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git remote add name xx@xxx.com:name/project.git (添加第二git仓库， name 自定义)<br>git remote <span class="hljs-built_in">rm</span> name (删除仓库)<br>git push name master (提交指定仓库)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/blog/2020/07/21/text/"/>
    <url>/blog/2020/07/21/text/</url>
    
    <content type="html"><![CDATA[<h2 id="首发纪念"><a href="#首发纪念" class="headerlink" title="首发纪念"></a>首发纪念</h2><p>没啥 就是纪念一下今天blog搞好了</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">source</span> vinv/bin/activate<br><br><span class="hljs-built_in">eval</span> $(pifpaf run postgresql --host 127.0.0.1 --port 5432)<br><br>createuser -s postgres<br><br>--cov mining_proxy(想看覆盖率的地方)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
