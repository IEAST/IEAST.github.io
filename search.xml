<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常用工具</title>
      <link href="/2022/05/05/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/05/05/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="parallel"><a href="#parallel" class="headerlink" title="parallel"></a><code>parallel</code></h2><p>好用的批处理工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">parallel <span class="hljs-built_in">command</span> parameter &#123;&#125;::: text1 text2 ... text*n<br></code></pre></td></tr></table></figure><p><code>parallel</code> 将command 中的命令执行n次，每次赋予text中的不同值。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo tag 页面不显示</title>
      <link href="/2022/04/18/hexo-tag-%E9%A1%B5%E9%9D%A2%E4%B8%8D%E6%98%BE%E7%A4%BA/"/>
      <url>/2022/04/18/hexo-tag-%E9%A1%B5%E9%9D%A2%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="创建的-tags-写法错误"><a href="#创建的-tags-写法错误" class="headerlink" title="创建的 tags 写法错误"></a>创建的 tags 写法错误</h3><p>删除 tags , categories 文件夹再次添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page tags<br></code></pre></td></tr></table></figure><p>在 tags 的 index.md 中添加</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>layout: &quot;tags&quot;<br><span class="hljs-section">type: &quot;tags&quot;</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>记得添加在虚线中。</p><h3 id="主题不支持"><a href="#主题不支持" class="headerlink" title="主题不支持"></a>主题不支持</h3><p>更新主题,可能是当前主题不支持显示 tag 页面。更换到有 tag 页面的主题就好。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 使用指北</title>
      <link href="/2022/04/18/git-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/"/>
      <url>/2022/04/18/git-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/</url>
      
        <content type="html"><![CDATA[<h2 id="第一次使用-git-仓库"><a href="#第一次使用-git-仓库" class="headerlink" title="第一次使用 git 仓库"></a>第一次使用 git 仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">git init(建立本地git仓库)<br>git add XXX(添加文件到本地git仓库)<br>git commit -m <span class="hljs-string">&quot;XXXX&quot;</span>(添加commit 信息)<br>git remote add origin git@github.com:name/project.git (添加github仓库)<br>$ git push -u origin master (提交代码)<br></code></pre></td></tr></table></figure><h2 id="以后提交"><a href="#以后提交" class="headerlink" title="以后提交"></a>以后提交</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git add XXX(添加文件到本地git仓库)<br>git commit -m <span class="hljs-string">&quot;XXXX&quot;</span>(添加commit 信息)<br>git push (提交代码)<br></code></pre></td></tr></table></figure><h2 id="第二仓库"><a href="#第二仓库" class="headerlink" title="第二仓库"></a>第二仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git remote add name xx@xxx.com:name/project.git (添加第二git仓库， name 自定义)<br>git remote <span class="hljs-built_in">rm</span> name (删除仓库)<br>git push name master (提交指定仓库)<br></code></pre></td></tr></table></figure><h3 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h3><p>从上游获取代码，同步到自己的仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git remote add upstream xxxx<br>git pull upsterm<br>git push origin master<br></code></pre></td></tr></table></figure><h2 id="git-配置"><a href="#git-配置" class="headerlink" title="git 配置"></a>git 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;name&quot;</span><br>git config --global user.email email<br>git config --list //显示所有配置<br></code></pre></td></tr></table></figure><h2 id="git-强制提交"><a href="#git-强制提交" class="headerlink" title="git 强制提交"></a>git 强制提交</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push -f origin master<br></code></pre></td></tr></table></figure><h2 id="删除失效的本地分支"><a href="#删除失效的本地分支" class="headerlink" title="删除失效的本地分支"></a>删除失效的本地分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote prune origin<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>warframe linux 玩耍+本地化</title>
      <link href="/2020/07/21/warframe/"/>
      <url>/2020/07/21/warframe/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>waframe 本身是不支持 linux 的, 我们可以通过<a href="https://lutris.net/">lutris</a>来下载并使用 wine 玩耍。</p><p>下载就先不说了 有需要在更新</p><h2 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h2><p>因为 lutris 下载后的默认语言是 En，然后本人英语又巨差，目前市面上也没有很好的本地化方法，故写一下咯。</p><p>Lutris 下载的游戏一般会在 Home 目录下新建一个 Games 的文件夹。</p><p>于是 waframe 的路径就是<code>/home/Games/warframe/drive_c/Program Files/Warframe</code></p><p>我们打开 <code>updater.sh </code>文件拉到最下方</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># run warframe internal updater</span><br><span class="hljs-string">&quot;<span class="hljs-variable">$WINE</span>&quot;</span> cmd /C <span class="hljs-string">&quot;<span class="hljs-variable">$WINPATH</span>&quot;</span> -silent -<span class="hljs-built_in">log</span>:/Preprocessing.<span class="hljs-built_in">log</span> -dx10:1 -dx11:1 -threadedworker:1 -cluster:public -language:zh -applet:/EE/Types/Framework/ContentUpdate<br><span class="hljs-keyword">fi</span><br><br><br><span class="hljs-comment">#############################################################</span><br><span class="hljs-comment"># cache optimization</span><br><span class="hljs-comment">#############################################################</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$do_cache</span>&quot;</span> = <span class="hljs-literal">true</span> ] ; <span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;*********************&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Optimizing Cache.&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;*********************&quot;</span><br><span class="hljs-string">&quot;<span class="hljs-variable">$WINE</span>&quot;</span> cmd /C <span class="hljs-string">&quot;<span class="hljs-variable">$WINPATH</span>&quot;</span>  -silent -<span class="hljs-built_in">log</span>:/Preprocessing.<span class="hljs-built_in">log</span> -dx10:1 -dx11:1 -threadedworker:1 -cluster:public -language:zh -applet:/EE/Types/Framework/CacheDefraggerAsync /Tools/CachePlan.txt<br><span class="hljs-keyword">fi</span><br><br><br><span class="hljs-comment">#############################################################</span><br><span class="hljs-comment"># actually start the game</span><br><span class="hljs-comment">#############################################################</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$start_game</span>&quot;</span> = <span class="hljs-literal">true</span> ] ; <span class="hljs-keyword">then</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;*********************&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Launching Warframe.&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;*********************&quot;</span><br><br><span class="hljs-string">&quot;<span class="hljs-variable">$WINE</span>&quot;</span> cmd /C start /b <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$WINPATH</span>&quot;</span> -<span class="hljs-built_in">log</span>:/Preprocessing.<span class="hljs-built_in">log</span> -dx10:1 -dx11:1 -threadedworker:1 -cluster:public -language:zh<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>直接把三个 <code>public -language:</code>后面的参数改成 zh 就好了。<br>前提是你语言有选中文编码。</p>]]></content>
      
      
      
        <tags>
            
            <tag> game </tag>
            
            <tag> warframe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2020/07/21/text/"/>
      <url>/2020/07/21/text/</url>
      
        <content type="html"><![CDATA[<h2 id="首发纪念"><a href="#首发纪念" class="headerlink" title="首发纪念"></a>首发纪念</h2><p>没啥 就是纪念一下今天blog搞好了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">source</span> vinv/bin/activate<br><br><span class="hljs-built_in">eval</span> $(pifpaf run postgresql --host 127.0.0.1 --port 5432)<br><br>createuser -s postgres<br><br>--cov mining_proxy(想看覆盖率的地方)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
